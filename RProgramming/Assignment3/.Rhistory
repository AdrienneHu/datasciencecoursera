}
plot(x,y,type='n',xlab='',ylab='')
points(x,y,col=z.col,pch=z.pch)
if (obs) text(x,y,c(1:n),pos=1,col=z.col,cex=1)
}
scatter.c(wt,mpg,cyl,obs=T)
title(xlab='weight',ylab='Miles per Gallon',main='Scatter plot of mpg*wt by cyl')
legend('topright',legend=c('cyl: 4','cyl: 6','cyl: 8'),col=rainbow(3),pch=1:3)
cafstud = read.csv("Student_cafstudy.csv")
library(lattice)
?lattice
?lubridate
library(lubridate)
library(slidify)
library(pamr)
library(kernlab)
cube=function(x,n){
x^3
}
cube(3)
x=1:10
if(x>5){x<-0
}
y
f=function(x){
g=function(y){
y+z
}
z=4
x+g(x)
}
z=10
f(3)
x=5
y=if(x<3){
NA
} else{
10
}
y
?order
?"[1]"
?beast
?best
setwd("/Users/adrienne716/Desktop/Summer/Coursera/R Programming/rprog-data-ProgAssignment3-data")
num_helper <- function(data, col_num, state, num){
state_subset <- data[data[,7]==state, ]
#get "heart attack", "heart failure", and "pneumonia" vector
outcome_arr <-state_subset[,col_num]
len <- dim(state_subset[!is.na(outcome_arr),])[1]
if(num == "worst"){
rank <- rank_helper(state_subset, outcome_arr, len)
} else if (num > len){
rank <-NA
} else{
rank <-rank_helper(state_subset, outcome_arr, num)
}
result <- rank
return(result)
}
rank_helper <-function(state_subset, outcome_arr, num){
result <- state_subset[,2][order(outcome_arr, state_subset[,2])[num]]
return(result)
}
rankhospital <- function(state, outcome, num = "best"){
#read the data file
directory <- "./outcome-of-care-measure.csv"
data <-read.csv(directory, colClasses="character")
# change the data type from character to numeric for the three columns of interest
data[, 11]<-as.numeric(data[,11]) #heart attack
data[, 17]<-as.numeric(data[,17]) #heart failure
data[, 23]<-as.numeric(data[,23]) #pneumonia
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (!state %in% data$State){
stop("invalid state")
} else if (!outcome %in% valid_outcomes){
stop("invalid outcome")
} else {
if (num == "best"){
rank <-beast(state,outcome)
} else {if (outcome == "heart attack"){
rank <-num_helper(data, 11, state, num)
} else if (outcome == "heart failure"){
rank <- num_helper(data, 17, state, num)
} else {
rank <- num_helper(data, 23, state, num)
}
}
result <- rank
return(result)
}
}
rankhospital("MN", "heart attack", 5000)
setwd("/Users/adrienne716/Desktop/Summer/Coursera/R Programming/rprog-data-ProgAssignment3-data")
num_helper <- function(data, col_num, state, num){
state_subset <- data[data[,7]==state, ]
#get "heart attack", "heart failure", and "pneumonia" vector
outcome_arr <-state_subset[,col_num]
len <- dim(state_subset[!is.na(outcome_arr),])[1]
if(num == "worst"){
rank <- rank_helper(state_subset, outcome_arr, len)
} else if (num > len){
rank <-NA
} else{
rank <-rank_helper(state_subset, outcome_arr, num)
}
result <- rank
return(result)
}
rank_helper <-function(state_subset, outcome_arr, num){
result <- state_subset[,2][order(outcome_arr, state_subset[,2])[num]]
return(result)
}
rankhospital <- function(state, outcome, num = "best"){
#read the data file
directory <- "./outcome-of-care-measures.csv"
data <-read.csv(directory, colClasses="character")
# change the data type from character to numeric for the three columns of interest
data[, 11]<-as.numeric(data[,11]) #heart attack
data[, 17]<-as.numeric(data[,17]) #heart failure
data[, 23]<-as.numeric(data[,23]) #pneumonia
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (!state %in% data$State){
stop("invalid state")
} else if (!outcome %in% valid_outcomes){
stop("invalid outcome")
} else {
if (num == "best"){
rank <-beast(state,outcome)
} else {if (outcome == "heart attack"){
rank <-num_helper(data, 11, state, num)
} else if (outcome == "heart failure"){
rank <- num_helper(data, 17, state, num)
} else {
rank <- num_helper(data, 23, state, num)
}
}
result <- rank
return(result)
}
}
rankhospital("NM", "heart attack", 5000)
rankhospital("MD", "heart attack", "worst")
rankhospital("MD", "heart attack", "best")
setwd("/Users/adrienne716/Desktop/Summer/Coursera/R Programming/rprog-data-ProgAssignment3-data")
num_helper <- function(data, col_num, state, num){
state_subset <- data[data[,7]==state, ]
#get "heart attack", "heart failure", and "pneumonia" vector
outcome_arr <-state_subset[,col_num]
len <- dim(state_subset[!is.na(outcome_arr),])[1]
if(num == "worst"){
rank <- rank_helper(state_subset, outcome_arr, len)
} else if (num > len){
rank <-NA
} else{
rank <-rank_helper(state_subset, outcome_arr, num)
}
result <- rank
return(result)
}
rank_helper <-function(state_subset, outcome_arr, num){
result <- state_subset[,2][order(outcome_arr, state_subset[,2])[num]]
return(result)
}
rankhospital <- function(state, outcome, num = "best"){
#read the data file
directory <- "./outcome-of-care-measures.csv"
data <-read.csv(directory, colClasses="character")
# change the data type from character to numeric for the three columns of interest
data[, 11]<-as.numeric(data[,11]) #heart attack
data[, 17]<-as.numeric(data[,17]) #heart failure
data[, 23]<-as.numeric(data[,23]) #pneumonia
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (!state %in% data$State){
stop("invalid state")
} else if (!outcome %in% valid_outcomes){
stop("invalid outcome")
} else {
if (num == "best"){
rank <- best(state,outcome)
} else {if (outcome == "heart attack"){
rank <-num_helper(data, 11, state, num)
} else if (outcome == "heart failure"){
rank <- num_helper(data, 17, state, num)
} else {
rank <- num_helper(data, 23, state, num)
}
}
result <- rank
return(result)
}
}
rankhospital("MD", "heart attack", "best")
setwd("/Users/adrienne716/Desktop/Summer/Coursera/R Programming/rprog-data-ProgAssignment3-data")
num_helper <- function(data, col_num, state, num){
state_subset <- data[data[,7]==state, ]
#get "heart attack", "heart failure", and "pneumonia" vector
outcome_arr <-state_subset[,col_num]
len <- dim(state_subset[!is.na(outcome_arr),])[1]
if(num == "worst"){
rank <- rank_helper(state_subset, outcome_arr, len)
} else if (num > len){
rank <-NA
} else{
rank <-rank_helper(state_subset, outcome_arr, num)
}
result <- rank
return(result)
}
rank_helper <-function(state_subset, outcome_arr, num){
result <- state_subset[,2][order(outcome_arr, state_subset[,2])[num]]
return(result)
}
rankhospital <- function(state, outcome, num = "best"){
#read the data file
directory <- "./outcome-of-care-measures.csv"
data <-read.csv(directory, colClasses="character")
# change the data type from character to numeric for the three columns of interest
data[, 11]<-as.numeric(data[,11]) #heart attack
data[, 17]<-as.numeric(data[,17]) #heart failure
data[, 23]<-as.numeric(data[,23]) #pneumonia
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
if (!state %in% data$State){
stop("invalid state")
} else if (!outcome %in% valid_outcomes){
stop("invalid outcome")
} else {
if (num == "best"){
rank <- num_helper(state,outcome)
} else {if (outcome == "heart attack"){
rank <-num_helper(data, 11, state, num)
} else if (outcome == "heart failure"){
rank <- num_helper(data, 17, state, num)
} else {
rank <- num_helper(data, 23, state, num)
}
}
result <- rank
return(result)
}
}
rankhospital("MD", "heart attack", "best")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit
submit()
submit()
5
submit()
submit()
submit()
?rank
setwd("/Users/adrienne716/Desktop/Summer/Coursera/R Programming/rprog-data-ProgAssignment3-data")
num_helper <- function(data, col_num, state, num){
state_subset <- data[data[,7]==state, ]
#get "heart attack", "heart failure", and "pneumonia" vector
outcome_arr <- state_subset[,col_num]
len <- dim(state_subset[!is.na(outcome_arr),])[1]
if(num == "best"){
rank <- rank_helper(state_subset, outcome_arr, 1)
} else if (num == "worst"){
rank <- rank_helper(state_subset, outcome_arr, len)
} else if (num > len){
rank <- NA
} else{
rank <-rank_helper(state_subset, outcome_arr, num)
}
result <- rank
return(result)
}
rank_helper <-function(state_subset, outcome_arr, num){
result <- state_subset[,2][order(outcome_arr, state_subset[,2])[num]]
return(result)
}
rankall <- function(state, outcome, num = "best"){
#read the data file
directory <- "./outcome-of-care-measures.csv"
data <-read.csv(directory, colClasses="character")
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid outcomes){
stop("invalid outcome")
} else {
for (i in 1:arr_len){
#loop for each state
state_subset <- data[data[,7]==state_arr[i], ]
if (outcome == "heart attack"){
hospital[i] <- num_helper(state_subset, 11, num)
} else if (outcome == "heart failure"){
hospital[i] <- num_helper(state_subset, 17, num)
} else{
hospital[i] <- num_helper(state_subset, 23, num)
}
}
} #create the data frame to return
dataframe <- data.frame(hospital = hospital, state = state_arr)
result = dataframe
return(result)
}
setwd("/Users/adrienne716/Desktop/Summer/Coursera/R Programming/rprog-data-ProgAssignment3-data")
num_helper <- function(data, col_num, state, num){
state_subset <- data[data[,7]==state, ]
#get "heart attack", "heart failure", and "pneumonia" vector
outcome_arr <- state_subset[,col_num]
len <- dim(state_subset[!is.na(outcome_arr),])[1]
if(num == "best"){
rank <- rank_helper(state_subset, outcome_arr, 1)
} else if (num == "worst"){
rank <- rank_helper(state_subset, outcome_arr, len)
} else if (num > len){
rank <- NA
} else{
rank <-rank_helper(state_subset, outcome_arr, num)
}
result <- rank
return(result)
}
rank_helper <-function(state_subset, outcome_arr, num){
result <- state_subset[,2][order(outcome_arr, state_subset[,2])[num]]
return(result)
}
rankall <- function(state, outcome, num = "best"){
#read the data file
directory <- "./outcome-of-care-measures.csv"
data <-read.csv(directory, colClasses="character")
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid_outcomes){
stop("invalid outcome")
} else {
for (i in 1:arr_len){
#loop for each state
state_subset <- data[data[,7]==state_arr[i], ]
if (outcome == "heart attack"){
hospital[i] <- num_helper(state_subset, 11, num)
} else if (outcome == "heart failure"){
hospital[i] <- num_helper(state_subset, 17, num)
} else{
hospital[i] <- num_helper(state_subset, 23, num)
}
}
} #create the data frame to return
dataframe <- data.frame(hospital = hospital, state = state_arr)
result = dataframe
return(result)
}
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("pneumonia", "worst"), 3)
setwd("/Users/adrienne716/Desktop/Summer/Coursera/R Programming/rprog-data-ProgAssignment3-data")
num_helper <- function(data, col_num, state, num){
state_subset <- data[data[,7]==state, ]
#get "heart attack", "heart failure", and "pneumonia" vector
outcome_arr <- state_subset[,col_num]
len <- dim(state_subset[!is.na(outcome_arr),])[1]
if(num == "best"){
rank <- rank_helper(state_subset, outcome_arr, 1)
} else if (num == "worst"){
rank <- rank_helper(state_subset, outcome_arr, len)
} else if (num > len){
rank <- NA
} else{
rank <-rank_helper(state_subset, outcome_arr, num)
}
result <- rank
return(result)
}
rank_helper <-function(state_subset, outcome_arr, num){
result <- state_subset[,2][order(outcome_arr, state_subset[,2])[num]]
return(result)
}
rankall <- function(state, outcome, num = "best"){
#read the data file
directory <- "./outcome-of-care-measures.csv"
data <-read.csv(directory, colClasses="character")
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid_outcomes){
stop("invalid outcome")
} else {
for (i in 1:arr_len){
#loop for each state
state_subset <- data[data[,7]==state_arr[i], ]
if (outcome == "heart attack"){
hospital[i] <- num_helper(state_subset, 11, num)
} else if (outcome == "heart failure"){
hospital[i] <- num_helper(state_subset, 17, num)
} else{
hospital[i] <- num_helper(state_subset, 23, num)
}
}
} #create the data frame to return
dataframe <- data.frame(hospital = hospital, state = state_arr)
result = dataframe
return(result)
}
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
rankall("heart attack", "best")
rankall("heart attack")
setwd("/Users/adrienne716/Desktop/Summer/Coursera/R Programming/rprog-data-ProgAssignment3-data")
num_helper <- function(data, col_num, state, num){
state_subset <- data[data[,7]==state, ]
#get "heart attack", "heart failure", and "pneumonia" vector
outcome_arr <- state_subset[,col_num]
len <- dim(state_subset[!is.na(outcome_arr),])[1]
if(num == "best"){
rank <- rank_helper(state_subset, outcome_arr, 1)
} else if (num == "worst"){
rank <- rank_helper(state_subset, outcome_arr, len)
} else if (num > len){
rank <- NA
} else{
rank <-rank_helper(state_subset, outcome_arr, num)
}
result <- rank
return(result)
}
rank_helper <-function(state_subset, outcome_arr, num){
result <- state_subset[,2][order(outcome_arr, state_subset[,2])[num]]
return(result)
}
rankall <- function(outcome, num = "best"){
#read the data file
directory <- "./outcome-of-care-measures.csv"
data <-read.csv(directory, colClasses="character")
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid_outcomes){
stop("invalid outcome")
} else {
for (i in 1:arr_len){
#loop for each state
state_subset <- data[data[,7]==state_arr[i], ]
if (outcome == "heart attack"){
hospital[i] <- num_helper(state_subset, 11, num)
} else if (outcome == "heart failure"){
hospital[i] <- num_helper(state_subset, 17, num)
} else{
hospital[i] <- num_helper(state_subset, 23, num)
}
}
} #create the data frame to return
dataframe <- data.frame(hospital = hospital, state = state_arr)
result = dataframe
return(result)
}
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
setwd("/Users/adrienne716/Desktop/Summer/Coursera/R Programming/rprog-data-ProgAssignment3-data")
num_helper <- function(state_subset, col_num, state, num){
#get "heart attack", "heart failure", and "pneumonia" vector
outcome_arr <- as.numeric(state_subset[,col_num])
len <- dim(state_subset[!is.na(outcome_arr),])[1]
if(num == "best"){
rank <- rank_helper(state_subset, outcome_arr, 1)
} else if (num == "worst"){
rank <- rank_helper(state_subset, outcome_arr, len)
} else if (num > len){
rank <- NA
} else{
rank <-rank_helper(state_subset, outcome_arr, num)
}
result <- rank
return(result)
}
rank_helper <-function(state_subset, outcome_arr, num){
result <- state_subset[,2][order(outcome_arr, state_subset[,2])[num]]
return(result)
}
rankall <- function(outcome, num = "best"){
#read the data file
directory <- "./outcome-of-care-measures.csv"
data <-read.csv(directory, colClasses="character")
valid_outcomes <- c("heart attack", "heart failure", "pneumonia")
state_arr <- sort(unique(data$State))
arr_len <- length(state_arr)
hospital <- rep("", arr_len)
if (!outcome %in% valid_outcomes){
stop("invalid outcome")
} else {
for (i in 1:arr_len){
#loop for each state
state_subset <- data[data[,7]==state_arr[i], ]
if (outcome == "heart attack"){
hospital[i] <- num_helper(state_subset, 11, num)
} else if (outcome == "heart failure"){
hospital[i] <- num_helper(state_subset, 17, num)
} else{
hospital[i] <- num_helper(state_subset, 23, num)
}
}
} #create the data frame to return
dataframe <- data.frame(hospital = hospital, state = state_arr)
result = dataframe
return(result)
}
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
submit()
